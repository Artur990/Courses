// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}
model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String  
  content   String?  @db.Text
}
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  jobTitle String
  image         String?
  accounts      Account[]
  sessions      Session[]
  // courseProgress   UserCourseProgress[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model Course {
  id                Int      @id @default(autoincrement())
  icon              String
  title             String
  name              String
  feature           String
  link              String
  description       String
  descriptionCourses String
  details           String
  price             Int
  review            Int
  stars             Int
  category          String
  // releaseDate       DateTime @map("data_premiery")
}

// model Course {
//   id                Int                  @id @default(autoincrement())
//   icon              String
//   title             String
//   name              String
//   features          Feature[]
//   link              String
//   description       String
//   descriptionCourses String
//   details           String
//   price             Int
//   review            Int
//   stars             Int
//   category          String
//   dataPremiery      DateTime
//   userProgress      UserCourseProgress[]
//   slides            Json
//   questions         Json // nowe pole
// }
// model Feature {
//   id      Int    @id @default(autoincrement())
//   feature String
//   course  Course @relation(fields: [courseId], references: [id])
//   courseId Int
// }
// model UserCourseProgress {
//   id           Int     @id @default(autoincrement())
//   userId       String
//   courseId     Int
//   progress     Float
//   completed    Boolean
//   slides       Json
//   user         User    @relation(fields: [userId], references: [id])
//   course       Course  @relation(fields: [courseId], references: [id])
// }
// model Question {
//   id       Int       @id @default(autoincrement())
//   title    String
//   index    Int
//   contents Content[]
// }

// model Content {
//   id         Int         @id @default(autoincrement())
//   nr         Int
//   index      Int
//   topic      String
//   questionId Int
//   question   Question    @relation(fields: [questionId], references: [id])
//   subContents SubContent[]
// }

// model SubContent {
//   id       Int     @id @default(autoincrement())
//   nr       Int
//   index    Int
//   topic    String
//   text     String
//   contentId Int
//   content  Content @relation(fields: [contentId], references: [id])
// }
